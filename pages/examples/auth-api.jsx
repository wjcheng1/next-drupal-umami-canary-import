import { NextSeo } from 'next-seo';
import {
	getCurrentLocaleStore,
	globalDrupalStateStores,
} from '../../lib/stores';
import { BUILD_MODE } from '../../lib/constants';

import Link from 'next/link';
import Layout from '../../components/layout';

export default function AuthApiExampleTemplate({ articles, footerMenu }) {
	return (
		<Layout footerMenu={footerMenu}>
			<NextSeo
				title="API Auth Example"
				description="Generated by create-pantheon-decoupled-kit."
			/>
			<div className="prose lg:prose-xl mt-10 flex flex-col mx-auto max-h-screen">
				<h1>API Authorization Example</h1>

				<Link passHref href="/">
					<span className="w-full underline cursor-pointer">Home &rarr;</span>
				</Link>

				<div className="mt-12 max-w-lg mx-auto lg:grid-cols-3 lg:max-w-screen-lg">
					{articles?.length > 0 ? (
						<p>
							ðŸŽ‰ Next.js was able to successfully make an authenticated request
							to Drupal! ðŸŽ‰
						</p>
					) : (
						<>
							<p>
								Next.js was unable to make an authorized request to the Drupal
								API. Please check your .env.development.local file to ensure
								that your <code>CLIENT_ID</code> and <code>CLIENT_SECRET</code>{' '}
								are set correctly.
							</p>
							<p>
								For more information on how to set these values, please see{' '}
								<a href="https://github.com/pantheon-systems/decoupled-kit-js/blob/canary/web/docs/Frontend%20Starters/Next.js/Next.js%20%2B%20Drupal/setting-environment-variables.md">
									Setting Environment Variables
								</a>
							</p>
						</>
					)}
				</div>
			</div>
		</Layout>
	);
}

export async function getServerSideProps(context) {
	const authStore = getCurrentLocaleStore(
		context.locale,
		globalDrupalStateStores,
	);

	if (!authStore.auth) {
		return { props: {} };
	}

	try {
		const articles = await authStore.getObject({
			objectName: 'node--article',
			refresh: !BUILD_MODE,
			res: context.res,
			params: 'fields[node--article]=length',
			anon: false,
		});
		const footerMenu = await authStore.getObject({
			objectName: 'menu_items--main',
			refresh: !BUILD_MODE,
			res: context.res,
			anon: true,
		});
		return {
			props: {
				articles,
				footerMenu,
			},
		};
	} catch (error) {
		process.env.DEBUG_MODE &&
			console.error(
				'Error occurred while fetching the authorized example: ',
				error,
			);
		return { props: {} };
	}
}
